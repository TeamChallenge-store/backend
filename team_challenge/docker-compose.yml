version: "3"

services:
  django:
    container_name: "django"
    build: .
    command: gunicorn team_challenge.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./team_challenge:/backend/team_challenge
    ports:
      - "8000:8000"
    env_file:
      - .env

  nginx:
    container_name: "nginx_server"
    build:
      context: ./nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./etc/letsencrypt:/etc/letsencrypt:ro
      - ./tmp/acme-challenge:/tmp/acme-challenge
    depends_on:
      - django

  letsencrypt:
    container_name: "certbot"
    image: certbot/certbot
    command: sh -c "certbot certonly --nginx"
    entrypoint: ""
    volumes:
      - "./etc/letsencrypt:/etc/letsencrypt"
      - "./tmp/acme-challenge:/tmp/acme-challenge"
    environment:
      - TERM=xterm

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - node-exporter

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    expose:
      - 9100

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=owner
      - GF_SECURITY_ADMIN_PASSWORD=password
    depends_on:
      - prometheus
